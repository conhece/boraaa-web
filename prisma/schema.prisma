datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client"
  output   = "../app/lib/db/prisma/generated"
}

model Category {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
}

model Source {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  site            String
  url             String    @unique
  strategy        String
  selector        String?
  waitForSelector String?
  updateSchedule  String
  patterns        String[]
  categories      String[]
  timezone        String
  lastUpdate      DateTime?
}

model Link {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  url        String    @unique
  site       String
  categories String[]
  source     String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  modifiedAt DateTime?
}

enum EventCategory {
  Todos
  Event
  BusinessEvent
  ChildrensEvent
  ComedyEvent
  CourseInstance
  DanceEvent
  DeliveryEvent
  EducationEvent
  EventSeries
  ExhibitionEvent
  Festival
  FoodEvent
  Hackathon
  LiteraryEvent
  MusicEvent
  PublicationEvent
  SaleEvent
  ScreeningEvent
  SocialEvent
  SportsEvent
  TheaterEvent
  VisualArtsEvent
  OlderAudienceEvent
  HealthEvent
  TechnologyEvent
  TourismEvent
}

model Event {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  url           String          @unique
  site          String
  categories    EventCategory[]
  source        String?
  name          String?
  about         String?
  image         String?
  actor         String?
  duration      Int?
  schedule      Json? // [{ start: Date, end: Date }]
  cheapestPrice Float?
  minimumAge    Int?
  schema        Json?
  location      Json? // { type: "Point", coordinates: [longitude, latitude] }
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  modifiedAt    DateTime?
}

model Organization {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  site        String
  logo        String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  places      Place[]
}

model Place {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  address        String
  location       Json // { type: "Point", coordinates: [longitude, latitude] }
  categories     String[]
  organizationId String?       @db.ObjectId
  organization   Organization? @relation(fields: [organizationId], references: [id])
  url            String?       @unique
  phone          String?
  website        String?
  email          String?
  description    String?
  image          String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  @@index([location], map: "location_2dsphere") // https://github.com/prisma/prisma/issues/12751#issuecomment-1093995044
}
